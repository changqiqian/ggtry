{"version":3,"sources":["file:///Users/yamiwang/cowboy/assets/scripts/HotUpdate.ts"],"names":["_decorator","Component","Asset","game","jsb","window","ccclass","property","HotUpdate","_updating","_canRetry","_storagePath","_am","_checkListener","_updateListener","_failCount","versionCompareHandle","checkCb","event","console","log","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","ALREADY_UP_TO_DATE","NEW_VERSION_FOUND","setEventCallback","updateCb","needRestart","failed","UPDATE_PROGRESSION","msg","getMessage","UPDATE_FINISHED","UPDATE_FAILED","ERROR_UPDATING","ERROR_DECOMPRESS","searchPaths","fileUtils","getSearchPaths","newPaths","getLocalManifest","JSON","stringify","Array","prototype","unshift","apply","localStorage","setItem","setSearchPaths","setTimeout","restart","retry","downloadFailedAssets","checkUpdate","getState","AssetsManager","State","UNINITED","url","manifestUrl","nativeUrl","loadLocalManifest","isLoaded","bind","hotUpdate","update","onLoad","getWritablePath","versionA","versionB","vA","split","vB","i","length","a","parseInt","b","setVerifyCallback","path","asset","compressed","expectedMD5","md5","relativePath","size","onDestroy"],"mappings":"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","sourcesContent":["const jsb = (<any>window).jsb;\nimport { _decorator, Component, Node, Label, ProgressBar, Asset, game, sys } from 'cc';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('HotUpdate')\nexport class HotUpdate extends Component {\n\n    @property(Asset)\n    manifestUrl: Asset = null!;\n\n    private _updating = false;\n    private _canRetry = false;\n    private _storagePath = '';\n    private _am: jsb.AssetsManager = null!;\n    private _checkListener = null;\n    private _updateListener = null;\n    private _failCount = 0;\n    private versionCompareHandle: (versionA: string, versionB: string) => number = null!;\n\n    checkCb(event: any) {\n        console.log('Code: ' + event.getEventCode());\n        switch (event.getEventCode()) {\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\n                //this.panel.info.string = \"No local manifest file found, hot update skipped.\";\n                break;\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\n                //this.panel.info.string = \"Fail to download manifest file, hot update skipped.\";\n                break;\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\n                //this.panel.info.string = \"Already up to date with the latest remote version.\";\n                break;\n            case jsb.EventAssetsManager.NEW_VERSION_FOUND:\n                //this.panel.info.string = 'New version found, please try to update. (' + Math.ceil(this._am.getTotalBytes() / 1024) + 'kb)';\n                //this.panel.checkBtn.active = false;\n                //this.panel.fileProgress.progress = 0;\n                //this.panel.byteProgress.progress = 0;\n                break;\n            default:\n                return;\n        }\n\n\n        this._am.setEventCallback(null!);\n        this._checkListener = null;\n        this._updating = false;\n    }\n\n    updateCb(event: any) {\n        var needRestart = false;\n        var failed = false;\n        switch (event.getEventCode()) {\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\n                //this.panel.info.string = 'No local manifest file found, hot update skipped.';\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\n                //this.panel.byteProgress.progress = event.getPercent();\n                //this.panel.fileProgress.progress = event.getPercentByFile();\n\n                //this.panel.fileLabel.string = event.getDownloadedFiles() + ' / ' + event.getTotalFiles();\n                //this.panel.byteLabel.string = event.getDownloadedBytes() + ' / ' + event.getTotalBytes();\n                //console.log(this.panel.fileLabel.string, this.panel.byteLabel.string);\n                var msg = event.getMessage();\n                if (msg) {\n                    //this.panel.info.string = 'Updated file: ' + msg;\n                    // cc.log(event.getPercent()/100 + '% : ' + msg);\n                }\n                break;\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\n                //this.panel.info.string = 'Fail to download manifest file, hot update skipped.';\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\n                //this.panel.info.string = 'Already up to date with the latest remote version.';\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\n                //this.panel.info.string = 'Update finished. ' + event.getMessage();\n                needRestart = true;\n                break;\n            case jsb.EventAssetsManager.UPDATE_FAILED:\n                //this.panel.info.string = 'Update failed. ' + event.getMessage();\n                //this.panel.retryBtn.active = true;\n                this._updating = false;\n                this._canRetry = true;\n                break;\n            case jsb.EventAssetsManager.ERROR_UPDATING:\n                //this.panel.info.string = 'Asset update error: ' + event.getAssetId() + ', ' + event.getMessage();\n                break;\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\n                //this.panel.info.string = event.getMessage();\n                break;\n            default:\n                break;\n        }\n\n        if (failed) {\n            this._am.setEventCallback(null!);\n            this._updateListener = null;\n            this._updating = false;\n        }\n\n        if (needRestart) {\n            this._am.setEventCallback(null!);\n            this._updateListener = null;\n            // Prepend the manifest's search path\n            var searchPaths = jsb.fileUtils.getSearchPaths();\n            var newPaths = this._am.getLocalManifest().getSearchPaths();\n            console.log(JSON.stringify(newPaths));\n            Array.prototype.unshift.apply(searchPaths, newPaths);\n            // This value will be retrieved and appended to the default search path during game startup,\n            // please refer to samples/js-tests/main.js for detailed usage.\n            // !!! Re-add the search paths in main.js is very important, otherwise, new scripts won't take effect.\n            localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(searchPaths));\n            jsb.fileUtils.setSearchPaths(searchPaths);\n\n            // restart game.\n            setTimeout(() => {\n                game.restart();\n            }, 1000)\n        }\n    }\n\n    retry() {\n        if (!this._updating && this._canRetry) {\n            //this.panel.retryBtn.active = false;\n            this._canRetry = false;\n\n            //this.panel.info.string = 'Retry failed Assets...';\n            this._am.downloadFailedAssets();\n        }\n    }\n\n    checkUpdate() {\n        if (this._updating) {\n            //this.panel.info.string = 'Checking or updating ...';\n            return;\n        }\n        if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n            var url = this.manifestUrl.nativeUrl;\n            this._am.loadLocalManifest(url);\n        }\n        if (!this._am.getLocalManifest() || !this._am.getLocalManifest().isLoaded()) {\n            //this.panel.info.string = 'Failed to load local manifest ...';\n            return;\n        }\n        this._am.setEventCallback(this.checkCb.bind(this));\n\n        this._am.checkUpdate();\n        this._updating = true;\n    }\n\n    hotUpdate() {\n        if (this._am && !this._updating) {\n            this._am.setEventCallback(this.updateCb.bind(this));\n\n            if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n                var url = this.manifestUrl.nativeUrl;\n                this._am.loadLocalManifest(url);\n            }\n\n            this._failCount = 0;\n            this._am.update();\n            //this.panel.updateBtn.active = false;\n            this._updating = true;\n        }\n    }\n\n\n    onLoad() {\n        // Hot update is only available in Native build\n        if (!jsb) {\n            return;\n        }\n        this._storagePath = ((jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/') + 'SY-remote-asset');\n        console.log('Storage path for remote asset : ' + this._storagePath);\n\n        // Setup your own version compare handler, versionA and B is versions in string\n        // if the return value greater than 0, versionA is greater than B,\n        // if the return value equals 0, versionA equals to B,\n        // if the return value smaller than 0, versionA is smaller than B.\n        this.versionCompareHandle = function (versionA: string, versionB: string) {\n            console.log(\"JS Custom Version Compare: version A is \" + versionA + ', version B is ' + versionB);\n            var vA = versionA.split('.');\n            var vB = versionB.split('.');\n            for (var i = 0; i < vA.length; ++i) {\n                var a = parseInt(vA[i]);\n                var b = parseInt(vB[i] || '0');\n                if (a === b) {\n                    continue;\n                }\n                else {\n                    return a - b;\n                }\n            }\n            if (vB.length > vA.length) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        };\n\n        // Init with empty manifest url for testing custom manifest\n        this._am = new jsb.AssetsManager('', this._storagePath, this.versionCompareHandle);\n\n        //var panel = this.panel;\n        // Setup the verification callback, but we don't have md5 check function yet, so only print some message\n        // Return true if the verification passed, otherwise return false\n        this._am.setVerifyCallback(function (path: string, asset: any) {\n            // When asset is compressed, we don't need to check its md5, because zip file have been deleted.\n            var compressed = asset.compressed;\n            // Retrieve the correct md5 value.\n            var expectedMD5 = asset.md5;\n            // asset.path is relative path and path is absolute.\n            var relativePath = asset.path;\n            // The size of asset file, but this value could be absent.\n            var size = asset.size;\n            if (compressed) {\n                //panel.info.string = \"Verification passed : \" + relativePath;\n                return true;\n            }\n            else {\n                //panel.info.string = \"Verification passed : \" + relativePath + ' (' + expectedMD5 + ')';\n                return true;\n            }\n        });\n\n        //this.panel.info.string = 'Hot update is ready, please check or directly update.';\n        //this.panel.fileProgress.progress = 0;\n        //this.panel.byteProgress.progress = 0;\n    }\n\n    onDestroy() {\n        if (this._updateListener) {\n            this._am.setEventCallback(null!);\n            this._updateListener = null;\n        }\n    }\n}\n\n"]}