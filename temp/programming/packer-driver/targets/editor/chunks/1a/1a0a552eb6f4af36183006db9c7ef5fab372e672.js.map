{"version":3,"sources":["file:///Users/yamiwang/cowboy/assets/scripts/ui/common/ToggleBtn.ts"],"names":["_decorator","Button","Label","BaseUI","ccclass","property","ToggleBtn","mCustmoerData","mDataNotify","InitParam","BindUI","RegDataNotify","LateInit","UnregDataNotify","CustmoerDestory","SetDataNotify","_dataNotify","_targetParam","_custmoerData","AddListener","NotifyCallback","bind","mSelected","node","on","OnSelected","mDisabled","OnDisabled","_val","_bef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;;AACrCC,MAAAA,M,iBAAAA,M;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;2BAGjBM,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACH,KAAD,C,UAERG,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACH,KAAD,C,2BATb,MACaI,SADb;AAAA;AAAA,4BACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAYlCC,aAZkC,GAYX,CAZW;AAAA,eAalCC,WAbkC,GAaP,IAbO;AAAA;;AAelCC,QAAAA,SAAS,GACT,CAEC;;AACDC,QAAAA,MAAM,GACN,CAEC;;AACDC,QAAAA,aAAa,GACb,CAEC;;AACDC,QAAAA,QAAQ,GACR,CAEC;;AACDC,QAAAA,eAAe,GACf,CAEC;;AACDC,QAAAA,eAAe,GACf,CAEC;;AAEMC,QAAAA,aAAa,CAACC,WAAD,EAA2BC,YAA3B,EAAmDC,aAAnD,EACpB;AACI,eAAKV,WAAL,GAAmBQ,WAAnB;AACA,eAAKT,aAAL,GAAqBW,aAArB;AACA,eAAKV,WAAL,CAAiBW,WAAjB,CAA6BF,YAA7B,EAA4C,KAAKG,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA5C,EAA4E,IAA5E;AAEA,eAAKC,SAAL,CAAeC,IAAf,CAAoBC,EAApB,CAAuB,SAAvB,EAAiC,KAAKC,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAjC,EAA4D,IAA5D;AACA,eAAKK,SAAL,CAAeH,IAAf,CAAoBC,EAApB,CAAuB,SAAvB,EAAiC,KAAKG,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAAjC,EAA4D,IAA5D;AACH;;AAEDI,QAAAA,UAAU,GACV,CAEC;;AAEDE,QAAAA,UAAU,GACV,CAEC;;AAEDP,QAAAA,cAAc,CAACQ,IAAD,EAAQC,IAAR,EACd;AACI,cAAGD,IAAI,IAAI,KAAKrB,aAAhB,EACA,CAEC,CAHD,MAKA,CAEC;AACJ;;AAtEiC,O;;;;;iBAGd,I;;;;;;;iBAEI,I;;;;;;;iBAEJ,I;;;;;;;iBAEG,I","sourcesContent":["import { _decorator, Component, Node, Button, Label } from 'cc';\nimport { BaseUI } from '../../base/BaseUI';\nimport { DataNotify } from '../../base/DataNotify';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ToggleBtn')\nexport class ToggleBtn extends BaseUI {\n\n    @property(Button) \n    mSelected: Button = null;\n    @property(Label) \n    mSelectedLabel: Label = null;\n    @property(Button) \n    mDisabled: Button = null;\n    @property(Label) \n    mDisableLabel: Label = null;\n\n\n    mCustmoerData:number = 0;\n    mDataNotify : DataNotify = null;\n\n    InitParam() \n    {\n\n    }\n    BindUI() \n    {\n\n    }\n    RegDataNotify() \n    {\n\n    }\n    LateInit() \n    {\n\n    }\n    UnregDataNotify() \n    {\n\n    }\n    CustmoerDestory() \n    {\n\n    }\n\n    public SetDataNotify(_dataNotify : DataNotify ,_targetParam : string , _custmoerData : number)\n    {\n        this.mDataNotify = _dataNotify;\n        this.mCustmoerData = _custmoerData;\n        this.mDataNotify.AddListener(_targetParam , this.NotifyCallback.bind(this), this);\n\n        this.mSelected.node.on(\"touched\",this.OnSelected.bind(this),this);\n        this.mDisabled.node.on(\"touched\",this.OnDisabled.bind(this),this);\n    }\n\n    OnSelected()\n    {\n\n    }\n\n    OnDisabled()\n    {\n\n    }\n\n    NotifyCallback(_val , _bef)\n    {\n        if(_val == this.mCustmoerData)\n        {\n\n        }\n        else\n        {\n\n        }\n    }\n\n}\n\n"]}