{"version":3,"sources":["file:///Users/yamiwang/cowboy/assets/scripts/ui/common/ToggleBtn.ts"],"names":["_decorator","Button","Label","BaseUI","ccclass","property","ToggleBtn","mTargetParam","mCustmoerData","mDataNotify","InitParam","BindUI","mSelected","node","on","OnSelected","bind","mDisabled","OnDisabled","RegDataNotify","LateInit","UnregDataNotify","CustmoerDestory","RemoveListenerByTarget","SetDataNotify","_dataNotify","_targetParam","_custmoerData","AddListener","NotifyCallback","SetTitle","_title","mSelectedLabel","string","mDisableLabel","console","log","SetValueByParamName","_val","_bef","active"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;;AACrCC,MAAAA,M,iBAAAA,M;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;2BAGjBM,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACH,KAAD,C,UAERG,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACH,KAAD,C,2BATb,MACaI,SADb;AAAA;AAAA,4BACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAWlCC,YAXkC;AAAA,eAYlCC,aAZkC,GAYX,CAZW;AAAA,eAalCC,WAbkC,GAaP,IAbO;AAAA;;AAelCC,QAAAA,SAAS,GACT,CAEC;;AACDC,QAAAA,MAAM,GACN;AACI,eAAKC,SAAL,CAAeC,IAAf,CAAoBC,EAApB,CAAuB,SAAvB,EAAiC,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAjC,EAA4D,IAA5D;AACA,eAAKC,SAAL,CAAeJ,IAAf,CAAoBC,EAApB,CAAuB,SAAvB,EAAiC,KAAKI,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAjC,EAA4D,IAA5D;AACH;;AACDG,QAAAA,aAAa,GACb,CAEC;;AACDC,QAAAA,QAAQ,GACR,CAEC;;AACDC,QAAAA,eAAe,GACf,CAEC;;AACDC,QAAAA,eAAe,GACf;AACI,cAAG,KAAKb,WAAL,IAAoB,IAAvB,EACA;AACI,iBAAKA,WAAL,CAAiBc,sBAAjB,CAAwC,IAAxC;AACH;AACJ;;AAEMC,QAAAA,aAAa,CAACC,WAAD,EAA2BC,YAA3B,EAAmDC,aAAnD,EACpB;AACI,eAAKlB,WAAL,GAAmBgB,WAAnB;AACA,eAAKjB,aAAL,GAAqBmB,aAArB;AACA,eAAKpB,YAAL,GAAoBmB,YAApB;AACA,eAAKjB,WAAL,CAAiBmB,WAAjB,CAA6B,KAAKrB,YAAlC,EAAiD,KAAKsB,cAAL,CAAoBb,IAApB,CAAyB,IAAzB,CAAjD,EAAiF,IAAjF;AACH;;AAEMc,QAAAA,QAAQ,CAACC,MAAD,EACf;AACI,eAAKC,cAAL,CAAoBC,MAApB,GAA6BF,MAA7B;AACA,eAAKG,aAAL,CAAmBD,MAAnB,GAA4BF,MAA5B;AACH;;AAEDhB,QAAAA,UAAU,GACV;AACIoB,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAEDlB,QAAAA,UAAU,GACV;AACI,cAAG,KAAKT,WAAL,IAAoB,IAAvB,EACA;AACI;AACH;;AACD0B,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,eAAK3B,WAAL,CAAiB4B,mBAAjB,CAAqC,KAAK9B,YAA1C,EAAyD,KAAKC,aAA9D;AACH;;AAEDqB,QAAAA,cAAc,CAACS,IAAD,EAAQC,IAAR,EACd;AACI,cAAGD,IAAI,IAAI,KAAK9B,aAAhB,EACA;AACI,iBAAKI,SAAL,CAAeC,IAAf,CAAoB2B,MAApB,GAA6B,IAA7B;AACA,iBAAKvB,SAAL,CAAeJ,IAAf,CAAoB2B,MAApB,GAA6B,KAA7B;AACH,WAJD,MAMA;AACI,iBAAK5B,SAAL,CAAeC,IAAf,CAAoB2B,MAApB,GAA6B,KAA7B;AACA,iBAAKvB,SAAL,CAAeJ,IAAf,CAAoB2B,MAApB,GAA6B,IAA7B;AACH;AACJ;;AArFiC,O;;;;;iBAGd,I;;;;;;;iBAEI,I;;;;;;;iBAEJ,I;;;;;;;iBAEG,I","sourcesContent":["import { _decorator, Component, Node, Button, Label } from 'cc';\nimport { BaseUI } from '../../base/BaseUI';\nimport { DataNotify } from '../../base/DataNotify';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ToggleBtn')\nexport class ToggleBtn extends BaseUI {\n\n    @property(Button) \n    mSelected: Button = null;\n    @property(Label) \n    mSelectedLabel: Label = null;\n    @property(Button) \n    mDisabled: Button = null;\n    @property(Label) \n    mDisableLabel: Label = null;\n\n    mTargetParam : string;\n    mCustmoerData:number = 0;\n    mDataNotify : DataNotify = null;\n\n    InitParam() \n    {\n\n    }\n    BindUI() \n    {\n        this.mSelected.node.on(\"touched\",this.OnSelected.bind(this),this);\n        this.mDisabled.node.on(\"touched\",this.OnDisabled.bind(this),this);\n    }\n    RegDataNotify() \n    {\n\n    }\n    LateInit() \n    {\n\n    }\n    UnregDataNotify() \n    {\n\n    }\n    CustmoerDestory() \n    {\n        if(this.mDataNotify != null)\n        {\n            this.mDataNotify.RemoveListenerByTarget(this);\n        }\n    }\n\n    public SetDataNotify(_dataNotify : DataNotify ,_targetParam : string , _custmoerData : number)\n    {\n        this.mDataNotify = _dataNotify;\n        this.mCustmoerData = _custmoerData;\n        this.mTargetParam = _targetParam;\n        this.mDataNotify.AddListener(this.mTargetParam , this.NotifyCallback.bind(this), this);\n    }\n\n    public SetTitle(_title :string)\n    {\n        this.mSelectedLabel.string = _title;\n        this.mDisableLabel.string = _title;\n    }\n\n    OnSelected()\n    {\n        console.log(\"OnSelected\");\n    }\n\n    OnDisabled()\n    {\n        if(this.mDataNotify == null)\n        {\n            return;\n        }\n        console.log(\"OnDisabled\");\n        this.mDataNotify.SetValueByParamName(this.mTargetParam , this.mCustmoerData);\n    }\n\n    NotifyCallback(_val , _bef)\n    {\n        if(_val == this.mCustmoerData)\n        {\n            this.mSelected.node.active = true;\n            this.mDisabled.node.active = false;\n        }\n        else\n        {\n            this.mSelected.node.active = false;\n            this.mDisabled.node.active = true;\n        }\n    }\n\n}\n\n"]}