{"version":3,"sources":["file:///Users/yamiwang/SY/assets/scripts/base/ResMgr.ts"],"names":["BundlePair","ResMgr","assetManager","constructor","_bundleName","bundle","key","value","bundleCache","GetInstance","instance","temp","Init","PreloadBundle","_loadFinish","bundleInCache","FindBundleInCache","console","log","loadBundle","_error","_bundle","AddBundleToCahce","GetAssetInBundle","_assetName","load","_asset","RemoveBundleFromCache","releaseAll","removeBundle","filter","target","Array","result","find","keypair","push"],"mappings":"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","sourcesContent":["\nimport { AssetManager, assetManager } from \"cc\";\nclass BundlePair {\n    key: string;\n    value: AssetManager.Bundle;\n\n    constructor(_bundleName : string , bundle : AssetManager.Bundle)\n    {\n        \n    }\n}\nexport class ResMgr \n{\n    private static instance : ResMgr = null;\n    public static GetInstance() :ResMgr\n    {\n        if(ResMgr.instance == null)\n        {\n            var temp = new ResMgr();\n            temp.Init();\n            ResMgr.instance = temp;\n        }\n        return ResMgr.instance;\n    }\n\n\n    private bundleCache : Array<BundlePair>;\n\n    public PreloadBundle( _bundleName : string , _loadFinish : Function)\n    {\n        var bundleInCache = this.FindBundleInCache(_bundleName);\n        if(bundleInCache != null)\n        {\n            console.log(\"PreloadBundle  当前bundle已经预加载过了   name===:\" + _bundleName);\n            if(_loadFinish)\n            {\n                _loadFinish();\n            }\n            return;\n        }\n\n        assetManager.loadBundle(_bundleName,(_error , _bundle)=>\n        {\n            if(_error != null)\n            {\n                console.log(\"PreloadBundle error   name===:\" + _bundleName);\n            }\n            else\n            {\n                this.AddBundleToCahce(_bundleName,_bundle);\n                if(_loadFinish)\n                {\n                    _loadFinish();\n                }\n            }\n        });\n    }\n\n    public GetAssetInBundle(_bundleName : string , _assetName : string , _loadFinish : Function) : any\n    {\n        var bundleInCache = this.FindBundleInCache(_bundleName);\n        if(bundleInCache == null)\n        {\n            console.log(\"GetAssetInBundle 当前bundle还未加载    name===:\" + _bundleName);\n            return null;\n        }\n\n        bundleInCache.value.load(_assetName,(_error , _asset)=>\n        {\n            if(_error != null)\n            {\n                console.log(\"GetAssetInBundle error   _bundleName:_assetName===\" + _bundleName + \":\" + _assetName);\n            }\n            else\n            {\n                if(_loadFinish)\n                {\n                    _loadFinish(_asset);\n                }\n            }\n        });\n    }\n\n    public RemoveBundleFromCache(_bundleName : string)\n    {\n        var bundleInCache = this.FindBundleInCache(_bundleName);\n        if(bundleInCache == null)\n        {\n            console.log(\"RemoveBundleFromCache bundle缓存中没有这个bundle   name ===:\" + _bundleName);\n            return;\n        }\n\n        bundleInCache.value.releaseAll();\n        assetManager.removeBundle(bundleInCache.value);\n        this.bundleCache = this.bundleCache.filter(target => target.key !== _bundleName);\n    }\n\n\n    private Init()\n    {\n        this.bundleCache = new Array<BundlePair>();\n    }\n\n    private FindBundleInCache( _bundleName : string) : BundlePair\n    {\n        var result = this.bundleCache.find(target => target.key == _bundleName);\n        return result;\n    }\n\n    private AddBundleToCahce(_bundleName : string , _bundle : AssetManager.Bundle)\n    {\n        var bundleInCache = this.FindBundleInCache(_bundleName);\n        if(bundleInCache != null)\n        {\n            console.log(\"AddBundleToCahce bundle缓存中已存在这个bundle了    name ===:\" + _bundleName);\n            return;\n        }\n\n        var keypair = new BundlePair(_bundleName , _bundle);\n        this.bundleCache.push(keypair);\n    }\n\n\n    \n}\n\n"]}