{"version":3,"sources":["file:///Users/yamiwang/cowboy/assets/scripts/network/Network.ts"],"names":["MsgKeyPair","MsgEvent","Network","_decorator","ccclass","property","constructor","_msgID","_callback","msgID","callback","_target","target","callbackList","Array","Add","keyPairIndex","findIndex","_item","console","log","keyPair","push","Remove","splice","GetInstance","instance","mWebSocket","mConnectTimer","mPingRevTimer","mPingSendTimer","mPingSpace","mMsgListenner","CreateWS","WebSocket","WS_Addr","onopen","OnOpen","bind","onmessage","OnMessage","onerror","OnError","onclose","OnClose","setTimeout","OnConnectTimeOut","ClearWS","clearTimeout","StopPing","close","event","AddMsgListenner","index","currentMsgEvent","RemoveListenner","readyState","OPEN","SendPing","OnPingTimeOut","RecvPing"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\nclass MsgKeyPair\n{\n    constructor(_msgID :number ,  _callback : Function ) \n    {\n        this.msgID = _msgID;\n        this.callback = _callback;\n    }\n    msgID : number ;\n    callback:Function;\n\n}\n\nclass MsgEvent\n{\n    constructor(_target : any ) \n    {\n        this.target = _target;\n        this.callbackList = new  Array<MsgKeyPair>();\n    }\n    target : any;\n    callbackList: Array<MsgKeyPair>;\n\n    public Add(_msgID:number , _callback : Function)\n    {\n        let keyPairIndex = this.callbackList.findIndex((_item) => _item.msgID === _msgID);\n        if(keyPairIndex >=0)\n        {\n            console.log(\"当前target已经注册过该网络消息了   _msgID===\" + _msgID + \"。不能重复注册\");\n            return;\n        }\n        let keyPair = new MsgKeyPair(_msgID , _callback);\n        this.callbackList.push(keyPair);\n    }\n\n    public Remove(_msgID:number)\n    {\n        let keyPairIndex = this.callbackList.findIndex((_item) => _item.msgID === _msgID);\n        if(keyPairIndex < 0)\n        {\n            console.log(\"当前target还没有注册过   _msgID===\" + _msgID + \"。不能移除\");\n            return;\n        }\n\n        this.callbackList.splice(keyPairIndex , 1);\n    }\n}\n\n\n\nexport class Network \n{\n    private static instance : Network = null;\n    public static GetInstance() :Network\n    {\n        if(Network.instance == null)\n        {\n            Network.instance = new Network();\n        }\n        return Network.instance;\n    }\n\n    public static WS_Addr = \"\";\n    private mWebSocket : WebSocket = null;\n    private mConnectTimer : number ;\n    private mPingRevTimer : number ;\n    private mPingSendTimer : number;\n    private mPingSpace : number = 5000;\n    private mMsgListenner : Array<MsgEvent>;\n\n    constructor() \n    {\n        this.mMsgListenner = new Array<MsgEvent>();\n    }\n\n\n    public CreateWS()\n    {\n        if(this.mWebSocket != null)\n        {\n            console.log(\"上一根ws还没有清理，不能重新连接\");\n            return;\n        }\n\n        this.mWebSocket = new WebSocket(Network.WS_Addr);\n        this.mWebSocket.onopen = this.OnOpen.bind(this);\n        this.mWebSocket.onmessage = this.OnMessage.bind(this);\n        this.mWebSocket.onerror = this.OnError.bind(this);\n        this.mWebSocket.onclose = this.OnClose.bind(this);\n        this.mConnectTimer = setTimeout( this.OnConnectTimeOut.bind(this), 3000);\n    }\n\n    public ClearWS()\n    {\n        clearTimeout(this.mConnectTimer);\n        this.StopPing();\n        if(this.mWebSocket != null)\n        {\n            this.mWebSocket.close();\n            this.mWebSocket.onopen = null;\n            this.mWebSocket.onmessage = null;\n            this.mWebSocket.onerror = null;\n            this.mWebSocket.onclose = null;\n        }\n        this.mWebSocket = null;\n        \n    }\n\n    private OnOpen(event)\n    {\n        clearTimeout(this.mConnectTimer);;\n    }\n\n    private OnMessage(event)\n    {\n\n    }\n\n    private OnError(event)\n    {\n\n    }\n\n    private OnClose(event)\n    {\n\n    }\n\n    private AddMsgListenner(_msgID : number , _callback : Function , _target : any)\n    {\n        let index = this.mMsgListenner.findIndex((_item) => _item.target === _target);\n        let currentMsgEvent : MsgEvent;\n        if(index >= 0)\n        {\n            currentMsgEvent = this.mMsgListenner[index];\n        }\n        else\n        {\n            currentMsgEvent = new MsgEvent(_target);\n            this.mMsgListenner.push(currentMsgEvent);\n        }\n\n        currentMsgEvent.Add(_msgID , _callback);\n        \n    }\n\n    private RemoveListenner(_target : any)\n    {\n        let index = this.mMsgListenner.findIndex((_item) => _item.target === _target);\n        if(index < 0)\n        {\n            console.log(\"当前_target还没有添加过网络监听，无法移除\");\n            return;\n        }\n\n        this.mMsgListenner.splice(index , 1);\n    }\n\n    private OnConnectTimeOut()\n    {\n        if (this.mWebSocket.readyState === WebSocket.OPEN) \n        {\n            \n        }\n        else \n        {\n            this.ClearWS();\n        }\n    }\n    ////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////心跳\n    ////////////////////////////////////////////////////////////////////////////////////\n    private SendPing()\n    {\n        //todo 发出心跳包\n        clearTimeout(this.mPingSendTimer);\n        this.mPingRevTimer = setTimeout(this.OnPingTimeOut.bind(this), this.mPingSpace);\n    }\n    \n    private RecvPing()\n    {\n        clearTimeout(this.mPingRevTimer);\n        this.mPingSendTimer = setTimeout(this.SendPing.bind(this), this.mPingSpace);\n    }\n\n    private StopPing()\n    {\n        clearTimeout(this.mPingRevTimer);\n        clearTimeout(this.mPingSendTimer);\n    }\n\n    private OnPingTimeOut()\n    {\n        //to do  心跳超时\n        this.ClearWS();\n    }\n\n}\n\n"]}